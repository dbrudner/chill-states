{"mappings":"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","sources":["src/scripts/chart.js","src/data/pools-by-state.ts","src/data/pop-by-state.ts","src/data/population.ts","src/data/state-names.ts","src/scripts/pool-data-transform.ts"],"sourcesContent":["import poolsByStateData from \"../data/pools-by-state\";\nimport popByState from \"../data/pop-by-state\";\nimport {\n  mapPoolbyStateToChartData,\n  getRange,\n} from \"./pool-data-transform\";\n\nlet poolsPerCapitaStateMap = {};\nfor (const key of Object.keys(popByState)) {\n  const poolsPerCapita =\n    poolsByStateData[key] / popByState[key];\n\n  poolsPerCapitaStateMap[key] = poolsPerCapita * 10000 || 0;\n}\n\nconsole.log(poolsPerCapitaStateMap);\ngoogle.charts.load(\"current\", {\n  packages: [\"geochart\"],\n  mapsApiKey: process.env.MAPS_KEY,\n});\n\ngoogle.charts.setOnLoadCallback(drawRegionsMap);\nfunction drawRegionsMap() {\n  const data = google.visualization.arrayToDataTable([\n    [\n      \"Country\",\n      \"Popularity\",\n      { role: \"tooltip\", p: { html: true } },\n    ],\n    ...mapPoolbyStateToChartData(poolsPerCapitaStateMap),\n  ]);\n\n  const sizeAxis = getRange(\n    Object.values(poolsPerCapitaStateMap)\n  );\n\n  const options = {\n    region: \"US\",\n    resolution: \"provinces\",\n    tooltip: {\n      isHtml: true,\n    },\n    colorAxis: {\n      minValue: sizeAxis.minValue,\n      colors: [\"white\", \"blue\"],\n      maxValue: sizeAxis.maxValue,\n    },\n    backgroundColor: \"#81d4fa\",\n    datalessRegionColor: \"#f8bbd0\",\n    defaultColor: \"#f5f5f5\",\n    sizeAxis,\n  };\n\n  const chart = new google.visualization.GeoChart(\n    document.getElementById(\"regions_div\")\n  );\n\n  chart.draw(data, options);\n}\n","/**\n * Map of key value pairs\n * [keys] are string-type two-letter US state abbreviations\n * https://en.wikipedia.org/wiki/List_of_U.S._state_and_territory_abbreviations\n *\n * Values are the number of pools in that state\n * https://www.datamasters.org/wp-content/uploads/USA-POOL-COUNTS.pdf\n */\nconst poolsByState = {\n\tAK: 5861,\n\tAL: 120363,\n\tAR: 56745,\n\tAZ: 431027,\n\tCA: 1242498,\n\tCO: 50167,\n\tCT: 95272,\n\tDC: 1779,\n\tDE: 15067,\n\tFL: 1305112,\n\tGA: 189842,\n\tIA: 38785,\n\tID: 22926,\n\tIL: 156489,\n\tIN: 153399,\n\tKS: 35074,\n\tKY: 99467,\n\tLA: 70202,\n\tMA: 129899,\n\tMD: 116142,\n\tME: 27151,\n\tMI: 282523,\n\tMN: 50679,\n\tMO: 117338,\n\tMS: 47597,\n\tMT: 8862,\n\tNC: 156899,\n\tND: 5322,\n\tNE: 19158,\n\tNH: 30879,\n\tNJ: 154994,\n\tNM: 14327,\n\tNV: 114822,\n\tNY: 463992,\n\tOH: 316514,\n\tOK: 99933,\n\tOR: 46605,\n\tPA: 333832,\n\tRI: 30073,\n\tSC: 92372,\n\tSD: 5643,\n\tTN: 168856,\n\tTX: 578327,\n\tUT: 20973,\n\tVA: 135370,\n\tVT: 12390,\n\tWA: 73926,\n\tWI: 109220,\n\tWV: 38001,\n\tWY: 2753,\n};\n\nexport default poolsByState;\n","import population from \"./population\";\nimport stateNames from \"./state-names\";\n\nlet stateNameToAbbreviation = {};\nconst mapValuesToKeys = Object.entries(stateNames);\nfor (const e of mapValuesToKeys) {\n  const [k, v] = e;\n  stateNameToAbbreviation[k] = population[v];\n}\n\nexport default stateNameToAbbreviation;\n","const population = {\n  \"Virgin Islands\": 104680,\n  \"Puerto Rico\": 3386941,\n  Guam: 165768,\n  \"Northern Mariana Islands\": 56882,\n  Alabama: 4864680,\n  Alaska: 738516,\n  Arizona: 6946685,\n  Arkansas: 2990671,\n  California: 39148760,\n  Colorado: 5531141,\n  Connecticut: 3581504,\n  Delaware: 949495,\n  \"District of Columbia\": 684498,\n  Florida: 20598139,\n  Georgia: 10297484,\n  Hawaii: 1422029,\n  Idaho: 1687809,\n  Illinois: 12821497,\n  Indiana: 6637426,\n  Iowa: 3132499,\n  Kansas: 2908776,\n  Kentucky: 4440204,\n  Louisiana: 4663616,\n  Maine: 1332813,\n  Maryland: 6003435,\n  Massachusetts: 6830193,\n  Michigan: 9957488,\n  Minnesota: 5527358,\n  Mississippi: 2988762,\n  Missouri: 6090062,\n  Montana: 1041732,\n  Nebraska: 1904760,\n  Nevada: 2922849,\n  \"New Hampshire\": 1343622,\n  \"New Jersey\": 8881845,\n  \"New Mexico\": 2092434,\n  \"New York\": 19618453,\n  \"North Carolina\": 10155624,\n  \"North Dakota\": 752201,\n  Ohio: 11641879,\n  Oklahoma: 3918137,\n  Oregon: 4081943,\n  Pennsylvania: 12791181,\n  \"Rhode Island\": 1056611,\n  \"South Carolina\": 4955925,\n  \"South Dakota\": 864289,\n  Tennessee: 6651089,\n  Texas: 27885195,\n  Utah: 3045350,\n  Vermont: 624977,\n  Virginia: 8413774,\n  Washington: 7294336,\n  \"West Virginia\": 1829054,\n  Wisconsin: 5778394,\n  Wyoming: 581836,\n};\n\nexport default population;\n","export default {\n  AL: \"Alabama\",\n  AK: \"Alaska\",\n  AS: \"American Samoa\",\n  AZ: \"Arizona\",\n  AR: \"Arkansas\",\n  CA: \"California\",\n  CO: \"Colorado\",\n  CT: \"Connecticut\",\n  DE: \"Delaware\",\n  DC: \"District Of Columbia\",\n  FM: \"Federated States Of Micronesia\",\n  FL: \"Florida\",\n  GA: \"Georgia\",\n  GU: \"Guam\",\n  HI: \"Hawaii\",\n  ID: \"Idaho\",\n  IL: \"Illinois\",\n  IN: \"Indiana\",\n  IA: \"Iowa\",\n  KS: \"Kansas\",\n  KY: \"Kentucky\",\n  LA: \"Louisiana\",\n  ME: \"Maine\",\n  MH: \"Marshall Islands\",\n  MD: \"Maryland\",\n  MA: \"Massachusetts\",\n  MI: \"Michigan\",\n  MN: \"Minnesota\",\n  MS: \"Mississippi\",\n  MO: \"Missouri\",\n  MT: \"Montana\",\n  NE: \"Nebraska\",\n  NV: \"Nevada\",\n  NH: \"New Hampshire\",\n  NJ: \"New Jersey\",\n  NM: \"New Mexico\",\n  NY: \"New York\",\n  NC: \"North Carolina\",\n  ND: \"North Dakota\",\n  MP: \"Northern Mariana Islands\",\n  OH: \"Ohio\",\n  OK: \"Oklahoma\",\n  OR: \"Oregon\",\n  PW: \"Palau\",\n  PA: \"Pennsylvania\",\n  PR: \"Puerto Rico\",\n  RI: \"Rhode Island\",\n  SC: \"South Carolina\",\n  SD: \"South Dakota\",\n  TN: \"Tennessee\",\n  TX: \"Texas\",\n  UT: \"Utah\",\n  VT: \"Vermont\",\n  VI: \"Virgin Islands\",\n  VA: \"Virginia\",\n  WA: \"Washington\",\n  WV: \"West Virginia\",\n  WI: \"Wisconsin\",\n  WY: \"Wyoming\",\n};\n","// function mapTooltipHtml(e) {\n// \tconst [state, amount] = e;\n// }\nimport poolsByStateData from \"../data/pools-by-state\";\nimport popByState from \"../data/pop-by-state\";\nimport stateNames from \"../data/state-names\";\nconsole.log({ poolsByStateData, popByState });\nexport function mapPoolbyStateToChartData(\n  googleChartData: Record<string, number>\n): [string, number, string][] {\n  return Object.entries(googleChartData).map((e) => {\n    const [state, amount] = e;\n    const toolTipHtml = `<div>\n    <ul><li>People: ${popByState[state] || \"\"}</li>\n        <li>Pools: ${poolsByStateData[state] || \"\"}\n    </ul>\n    </div>`;\n    return [state, amount, toolTipHtml];\n  });\n}\n\nexport function getRange(numbers: number[]): {\n  minValue: number;\n  maxValue: number;\n} {\n  return {\n    minValue: numbers.reduce(\n      (n, m) => Math.min(n, m),\n      numbers[0]\n    ),\n    maxValue: numbers.reduce((n, m) => Math.max(n, m), 0),\n  };\n}\n"],"names":[],"version":3,"file":"index.f61f3603.js.map"}